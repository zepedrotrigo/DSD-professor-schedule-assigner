{"ast":null,"code":"\"use strict\";\n/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* jslint esnext: true */\n\nvar round = Math.round;\n\nfunction daysToYears(days) {\n  // 400 years have 146097 days (taking into account leap year rules)\n  return days * 400 / 146097;\n} // Thanks to date-fns\n// https://github.com/date-fns/date-fns\n// MIT © Sasha Koss\n\n\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_DAY = 86400000;\n\nfunction startOfDay(dirtyDate) {\n  var date = new Date(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nfunction differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE;\n  var timestampRight = startOfDayRight.getTime() - startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE; // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}\n\nfunction default_1(from, to) {\n  // Convert to ms timestamps.\n  from = +from;\n  to = +to;\n  var millisecond = round(to - from),\n      second = round(millisecond / 1000),\n      minute = round(second / 60),\n      hour = round(minute / 60); // We expect a more precision in rounding when dealing with\n  // days as it feels wrong when something happended 13 hours ago and\n  // is regarded as \"yesterday\" even if the time was this morning.\n\n  var day = differenceInCalendarDays(to, from);\n  var week = round(day / 7);\n  var rawYears = daysToYears(day),\n      month = round(rawYears * 12),\n      year = round(rawYears);\n  return {\n    millisecond: millisecond,\n    second: second,\n    'second-short': second,\n    minute: minute,\n    'minute-short': minute,\n    hour: hour,\n    'hour-short': hour,\n    day: day,\n    'day-short': day,\n    week: week,\n    'week-short': week,\n    month: month,\n    'month-short': month,\n    year: year,\n    'year-short': year\n  };\n}\n\nexports.default = default_1;","map":{"version":3,"mappings":";AAAA;;;;;;;;;AAMA;;AAEA,IAAIA,KAAK,GAAGC,IAAI,CAACD,KAAjB;;AAEA,SAASE,WAAT,CAAqBC,IAArB,EAAyB;AACrB;AACA,SAAOA,IAAI,GAAG,GAAP,GAAa,MAApB;AACH,C,CAED;AACA;AACA;;;AAEA,IAAIC,sBAAsB,GAAG,KAA7B;AACA,IAAIC,mBAAmB,GAAG,QAA1B;;AAEA,SAASC,UAAT,CAAqBC,SAArB,EAA8B;AAC1B,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,SAAT,CAAX;AACAC,MAAI,CAACE,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,SAAOF,IAAP;AACH;;AAED,SAASG,wBAAT,CAAmCC,aAAnC,EAAkDC,cAAlD,EAAgE;AAC5D,MAAIC,cAAc,GAAGR,UAAU,CAACM,aAAD,CAA/B;AACA,MAAIG,eAAe,GAAGT,UAAU,CAACO,cAAD,CAAhC;AAEA,MAAIG,aAAa,GAAGF,cAAc,CAACG,OAAf,KAChBH,cAAc,CAACI,iBAAf,KAAqCd,sBADzC;AAEA,MAAIe,cAAc,GAAGJ,eAAe,CAACE,OAAhB,KACjBF,eAAe,CAACG,iBAAhB,KAAsCd,sBAD1C,CAN4D,CAS5D;AACA;AACA;;AACA,SAAOH,IAAI,CAACD,KAAL,CAAW,CAACgB,aAAa,GAAGG,cAAjB,IAAmCd,mBAA9C,CAAP;AACH;;AAED,mBAAyBe,IAAzB,EAA+BC,EAA/B,EAAiC;AAC7B;AACAD,MAAI,GAAG,CAACA,IAAR;AACAC,IAAE,GAAK,CAACA,EAAR;AAEA,MAAIC,WAAW,GAAGtB,KAAK,CAACqB,EAAE,GAAGD,IAAN,CAAvB;AAAA,MACIG,MAAM,GAAQvB,KAAK,CAACsB,WAAW,GAAG,IAAf,CADvB;AAAA,MAEIE,MAAM,GAAQxB,KAAK,CAACuB,MAAM,GAAG,EAAV,CAFvB;AAAA,MAGIE,IAAI,GAAUzB,KAAK,CAACwB,MAAM,GAAG,EAAV,CAHvB,CAL6B,CAUzB;AACA;AACA;;AAEJ,MAAIE,GAAG,GAAGf,wBAAwB,CAACU,EAAD,EAAKD,IAAL,CAAlC;AACA,MAAIO,IAAI,GAAG3B,KAAK,CAAC0B,GAAG,GAAG,CAAP,CAAhB;AAEA,MAAIE,QAAQ,GAAG1B,WAAW,CAACwB,GAAD,CAA1B;AAAA,MACIG,KAAK,GAAM7B,KAAK,CAAC4B,QAAQ,GAAG,EAAZ,CADpB;AAAA,MAEIE,IAAI,GAAO9B,KAAK,CAAC4B,QAAD,CAFpB;AAIA,SAAO;AACHN,eAAW,EAAMA,WADd;AAEHC,UAAM,EAAWA,MAFd;AAGH,oBAAiBA,MAHd;AAIHC,UAAM,EAAWA,MAJd;AAKH,oBAAiBA,MALd;AAMHC,QAAI,EAAaA,IANd;AAOH,kBAAiBA,IAPd;AAQHC,OAAG,EAAcA,GARd;AASH,iBAAiBA,GATd;AAUHC,QAAI,EAAaA,IAVd;AAWH,kBAAiBA,IAXd;AAYHE,SAAK,EAAYA,KAZd;AAaH,mBAAiBA,KAbd;AAcHC,QAAI,EAAaA,IAdd;AAeH,kBAAiBA;AAfd,GAAP;AAiBH;;AAtCDC","names":["round","Math","daysToYears","days","MILLISECONDS_IN_MINUTE","MILLISECONDS_IN_DAY","startOfDay","dirtyDate","date","Date","setHours","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","getTime","getTimezoneOffset","timestampRight","from","to","millisecond","second","minute","hour","day","week","rawYears","month","year","exports"],"sources":["/home/fortnyce/Desktop/work_schedule_assigner/node_modules/intl-relativeformat/src/diff.js"],"sourcesContent":["/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nvar round = Math.round;\n\nfunction daysToYears(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    return days * 400 / 146097;\n}\n\n// Thanks to date-fns\n// https://github.com/date-fns/date-fns\n// MIT © Sasha Koss\n\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_DAY = 86400000;\n\nfunction startOfDay (dirtyDate) {\n    var date = new Date(dirtyDate);\n    date.setHours(0, 0, 0, 0);\n    return date;\n}\n\nfunction differenceInCalendarDays (dirtyDateLeft, dirtyDateRight) {\n    var startOfDayLeft = startOfDay(dirtyDateLeft);\n    var startOfDayRight = startOfDay(dirtyDateRight);\n\n    var timestampLeft = startOfDayLeft.getTime() -\n        startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE;\n    var timestampRight = startOfDayRight.getTime() -\n        startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE;\n\n    // Round the number of days to the nearest integer\n    // because the number of milliseconds in a day is not constant\n    // (e.g. it's different in the day of the daylight saving time clock shift)\n    return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}\n\nexport default function (from, to) {\n    // Convert to ms timestamps.\n    from = +from;\n    to   = +to;\n\n    var millisecond = round(to - from),\n        second      = round(millisecond / 1000),\n        minute      = round(second / 60),\n        hour        = round(minute / 60);\n\n        // We expect a more precision in rounding when dealing with\n        // days as it feels wrong when something happended 13 hours ago and\n        // is regarded as \"yesterday\" even if the time was this morning.\n\n    var day = differenceInCalendarDays(to, from);\n    var week = round(day / 7);\n\n    var rawYears = daysToYears(day),\n        month    = round(rawYears * 12),\n        year     = round(rawYears);\n\n    return {\n        millisecond    : millisecond,\n        second         : second,\n        'second-short' : second,\n        minute         : minute,\n        'minute-short' : minute,\n        hour           : hour,\n        'hour-short'   : hour,\n        day            : day,\n        'day-short'    : day,\n        week           : week,\n        'week-short'   : week,\n        month          : month,\n        'month-short'  : month,\n        year           : year,\n        'year-short'   : year\n    };\n}\n"]},"metadata":{},"sourceType":"script"}