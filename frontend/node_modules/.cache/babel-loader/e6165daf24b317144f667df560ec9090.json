{"ast":null,"code":"\"use strict\";\n/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* jslint esnext: true */\n\nvar intl_messageformat_1 = require(\"intl-messageformat\");\n\nvar diff_1 = require(\"./diff\");\n\nvar es5_1 = require(\"./es5\");\n\nexports.default = RelativeFormat; // -----------------------------------------------------------------------------\n\nvar FIELDS = ['second', 'second-short', 'minute', 'minute-short', 'hour', 'hour-short', 'day', 'day-short', 'month', 'month-short', 'year', 'year-short'];\nvar STYLES = ['best fit', 'numeric']; // -- RelativeFormat -----------------------------------------------------------\n\nfunction RelativeFormat(locales, options) {\n  options = options || {}; // Make a copy of `locales` if it's an array, so that it doesn't change\n  // since it's used lazily.\n\n  if (es5_1.isArray(locales)) {\n    locales = locales.concat();\n  }\n\n  es5_1.defineProperty(this, '_locale', {\n    value: this._resolveLocale(locales)\n  });\n  es5_1.defineProperty(this, '_options', {\n    value: {\n      style: this._resolveStyle(options.style),\n      units: this._isValidUnits(options.units) && options.units\n    }\n  });\n  es5_1.defineProperty(this, '_locales', {\n    value: locales\n  });\n  es5_1.defineProperty(this, '_fields', {\n    value: this._findFields(this._locale)\n  });\n  es5_1.defineProperty(this, '_messages', {\n    value: es5_1.objCreate(null)\n  }); // \"Bind\" `format()` method to `this` so it can be passed by reference like\n  // the other `Intl` APIs.\n\n  var relativeFormat = this;\n\n  this.format = function format(date, options) {\n    return relativeFormat._format(date, options);\n  };\n} // Define internal private properties for dealing with locale data.\n\n\nes5_1.defineProperty(RelativeFormat, '__localeData__', {\n  value: es5_1.objCreate(null)\n});\nes5_1.defineProperty(RelativeFormat, '__addLocaleData', {\n  value: function () {\n    for (var i = 0; i < arguments.length; i++) {\n      var datum = arguments[i];\n\n      if (!(datum && datum.locale)) {\n        throw new Error('Locale data provided to IntlRelativeFormat is missing a ' + '`locale` property value');\n      }\n\n      RelativeFormat.__localeData__[datum.locale.toLowerCase()] = datum; // Add data to IntlMessageFormat.\n\n      intl_messageformat_1.default.__addLocaleData(datum);\n    }\n  }\n}); // Define public `defaultLocale` property which can be set by the developer, or\n// it will be set when the first RelativeFormat instance is created by\n// leveraging the resolved locale from `Intl`.\n\nes5_1.defineProperty(RelativeFormat, 'defaultLocale', {\n  enumerable: true,\n  writable: true,\n  value: undefined\n}); // Define public `thresholds` property which can be set by the developer, and\n// defaults to relative time thresholds from moment.js.\n\nes5_1.defineProperty(RelativeFormat, 'thresholds', {\n  enumerable: true,\n  value: {\n    second: 45,\n    'second-short': 45,\n    minute: 45,\n    'minute-short': 45,\n    hour: 22,\n    'hour-short': 22,\n    day: 26,\n    'day-short': 26,\n    month: 11,\n    'month-short': 11 // months to year\n\n  }\n});\n\nRelativeFormat.prototype.resolvedOptions = function () {\n  return {\n    locale: this._locale,\n    style: this._options.style,\n    units: this._options.units\n  };\n};\n\nRelativeFormat.prototype._compileMessage = function (units) {\n  // `this._locales` is the original set of locales the user specified to the\n  // constructor, while `this._locale` is the resolved root locale.\n  var locales = this._locales;\n  var resolvedLocale = this._locale;\n  var field = this._fields[units];\n  var relativeTime = field.relativeTime;\n  var future = '';\n  var past = '';\n  var i;\n\n  for (i in relativeTime.future) {\n    if (relativeTime.future.hasOwnProperty(i)) {\n      future += ' ' + i + ' {' + relativeTime.future[i].replace('{0}', '#') + '}';\n    }\n  }\n\n  for (i in relativeTime.past) {\n    if (relativeTime.past.hasOwnProperty(i)) {\n      past += ' ' + i + ' {' + relativeTime.past[i].replace('{0}', '#') + '}';\n    }\n  }\n\n  var message = '{when, select, future {{0, plural, ' + future + '}}' + 'past {{0, plural, ' + past + '}}}'; // Create the synthetic IntlMessageFormat instance using the original\n  // locales value specified by the user when constructing the the parent\n  // IntlRelativeFormat instance.\n\n  return new intl_messageformat_1.default(message, locales);\n};\n\nRelativeFormat.prototype._getMessage = function (units) {\n  var messages = this._messages; // Create a new synthetic message based on the locale data from CLDR.\n\n  if (!messages[units]) {\n    messages[units] = this._compileMessage(units);\n  }\n\n  return messages[units];\n};\n\nRelativeFormat.prototype._getRelativeUnits = function (diff, units) {\n  var field = this._fields[units];\n\n  if (field.relative) {\n    return field.relative[diff];\n  }\n};\n\nRelativeFormat.prototype._findFields = function (locale) {\n  var localeData = RelativeFormat.__localeData__;\n  var data = localeData[locale.toLowerCase()]; // The locale data is de-duplicated, so we have to traverse the locale's\n  // hierarchy until we find `fields` to return.\n\n  while (data) {\n    if (data.fields) {\n      return data.fields;\n    }\n\n    data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];\n  }\n\n  throw new Error('Locale data added to IntlRelativeFormat is missing `fields` for :' + locale);\n};\n\nRelativeFormat.prototype._format = function (date, options) {\n  var now = options && options.now !== undefined ? options.now : es5_1.dateNow();\n\n  if (date === undefined) {\n    date = now;\n  } // Determine if the `date` and optional `now` values are valid, and throw a\n  // similar error to what `Intl.DateTimeFormat#format()` would throw.\n\n\n  if (!isFinite(now)) {\n    throw new RangeError('The `now` option provided to IntlRelativeFormat#format() is not ' + 'in valid range.');\n  }\n\n  if (!isFinite(date)) {\n    throw new RangeError('The date value provided to IntlRelativeFormat#format() is not ' + 'in valid range.');\n  }\n\n  var diffReport = diff_1.default(now, date);\n\n  var units = this._options.units || this._selectUnits(diffReport);\n\n  var diffInUnits = diffReport[units];\n\n  if (this._options.style !== 'numeric') {\n    var relativeUnits = this._getRelativeUnits(diffInUnits, units);\n\n    if (relativeUnits) {\n      return relativeUnits;\n    }\n  }\n\n  return this._getMessage(units).format({\n    '0': Math.abs(diffInUnits),\n    when: diffInUnits < 0 ? 'past' : 'future'\n  });\n};\n\nRelativeFormat.prototype._isValidUnits = function (units) {\n  if (!units || es5_1.arrIndexOf.call(FIELDS, units) >= 0) {\n    return true;\n  }\n\n  if (typeof units === 'string') {\n    var suggestion = /s$/.test(units) && units.substr(0, units.length - 1);\n\n    if (suggestion && es5_1.arrIndexOf.call(FIELDS, suggestion) >= 0) {\n      throw new Error('\"' + units + '\" is not a valid IntlRelativeFormat `units` ' + 'value, did you mean: ' + suggestion);\n    }\n  }\n\n  throw new Error('\"' + units + '\" is not a valid IntlRelativeFormat `units` value, it ' + 'must be one of: \"' + FIELDS.join('\", \"') + '\"');\n};\n\nRelativeFormat.prototype._resolveLocale = function (locales) {\n  if (typeof locales === 'string') {\n    locales = [locales];\n  } // Create a copy of the array so we can push on the default locale.\n\n\n  locales = (locales || []).concat(RelativeFormat.defaultLocale);\n  var localeData = RelativeFormat.__localeData__;\n  var i, len, localeParts, data; // Using the set of locales + the default locale, we look for the first one\n  // which that has been registered. When data does not exist for a locale, we\n  // traverse its ancestors to find something that's been registered within\n  // its hierarchy of locales. Since we lack the proper `parentLocale` data\n  // here, we must take a naive approach to traversal.\n\n  for (i = 0, len = locales.length; i < len; i += 1) {\n    localeParts = locales[i].toLowerCase().split('-');\n\n    while (localeParts.length) {\n      data = localeData[localeParts.join('-')];\n\n      if (data) {\n        // Return the normalized locale string; e.g., we return \"en-US\",\n        // instead of \"en-us\".\n        return data.locale;\n      }\n\n      localeParts.pop();\n    }\n  }\n\n  var defaultLocale = locales.pop();\n  throw new Error('No locale data has been added to IntlRelativeFormat for: ' + locales.join(', ') + ', or the default locale: ' + defaultLocale);\n};\n\nRelativeFormat.prototype._resolveStyle = function (style) {\n  // Default to \"best fit\" style.\n  if (!style) {\n    return STYLES[0];\n  }\n\n  if (es5_1.arrIndexOf.call(STYLES, style) >= 0) {\n    return style;\n  }\n\n  throw new Error('\"' + style + '\" is not a valid IntlRelativeFormat `style` value, it ' + 'must be one of: \"' + STYLES.join('\", \"') + '\"');\n};\n\nRelativeFormat.prototype._selectUnits = function (diffReport) {\n  var i, l, units;\n  var fields = FIELDS.filter(function (field) {\n    return field.indexOf('-short') < 1;\n  });\n\n  for (i = 0, l = fields.length; i < l; i += 1) {\n    units = fields[i];\n\n    if (Math.abs(diffReport[units]) < RelativeFormat.thresholds[units]) {\n      break;\n    }\n  }\n\n  return units;\n};","map":{"version":3,"mappings":"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","names":["exports","RelativeFormat","FIELDS","STYLES","locales","options","es5_1","concat","value","_resolveLocale","style","_resolveStyle","units","_isValidUnits","_findFields","_locale","relativeFormat","format","date","_format","i","arguments","length","datum","locale","Error","__localeData__","toLowerCase","intl_messageformat_1","__addLocaleData","enumerable","writable","undefined","second","minute","hour","day","month","prototype","resolvedOptions","_options","_compileMessage","_locales","resolvedLocale","field","_fields","relativeTime","future","past","hasOwnProperty","replace","message","_getMessage","messages","_messages","_getRelativeUnits","diff","relative","localeData","data","fields","parentLocale","now","isFinite","RangeError","diffReport","diff_1","_selectUnits","diffInUnits","relativeUnits","Math","abs","when","call","suggestion","test","substr","join","defaultLocale","len","localeParts","split","pop","l","filter","indexOf","thresholds"],"sources":["/home/fortnyce/Desktop/work_schedule_assigner/node_modules/intl-relativeformat/src/core.js"],"sourcesContent":["/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport IntlMessageFormat from 'intl-messageformat';\nimport diff from './diff';\nimport {\n    defineProperty,\n    objCreate,\n    arrIndexOf,\n    isArray,\n    dateNow\n} from './es5';\n\nexport default RelativeFormat;\n\n// -----------------------------------------------------------------------------\n\nvar FIELDS = [\n    'second', 'second-short',\n    'minute', 'minute-short',\n    'hour', 'hour-short',\n    'day', 'day-short',\n    'month', 'month-short',\n    'year', 'year-short'\n];\nvar STYLES = ['best fit', 'numeric'];\n\n// -- RelativeFormat -----------------------------------------------------------\n\nfunction RelativeFormat(locales, options) {\n    options = options || {};\n\n    // Make a copy of `locales` if it's an array, so that it doesn't change\n    // since it's used lazily.\n    if (isArray(locales)) {\n        locales = locales.concat();\n    }\n\n    defineProperty(this, '_locale', {value: this._resolveLocale(locales)});\n    defineProperty(this, '_options', {value: {\n        style: this._resolveStyle(options.style),\n        units: this._isValidUnits(options.units) && options.units\n    }});\n\n    defineProperty(this, '_locales', {value: locales});\n    defineProperty(this, '_fields', {value: this._findFields(this._locale)});\n    defineProperty(this, '_messages', {value: objCreate(null)});\n\n    // \"Bind\" `format()` method to `this` so it can be passed by reference like\n    // the other `Intl` APIs.\n    var relativeFormat = this;\n    this.format = function format(date, options) {\n        return relativeFormat._format(date, options);\n    };\n}\n\n// Define internal private properties for dealing with locale data.\ndefineProperty(RelativeFormat, '__localeData__', {value: objCreate(null)});\ndefineProperty(RelativeFormat, '__addLocaleData', {value: function () {\n    for (var i = 0; i < arguments.length; i++) {\n        var datum = arguments[i]\n        if (!(datum && datum.locale)) {\n            throw new Error(\n                'Locale data provided to IntlRelativeFormat is missing a ' +\n                '`locale` property value'\n            );\n        }\n    \n        RelativeFormat.__localeData__[datum.locale.toLowerCase()] = datum;\n    \n        // Add data to IntlMessageFormat.\n        IntlMessageFormat.__addLocaleData(datum);\n    }\n}});\n\n// Define public `defaultLocale` property which can be set by the developer, or\n// it will be set when the first RelativeFormat instance is created by\n// leveraging the resolved locale from `Intl`.\ndefineProperty(RelativeFormat, 'defaultLocale', {\n    enumerable: true,\n    writable  : true,\n    value     : undefined\n});\n\n// Define public `thresholds` property which can be set by the developer, and\n// defaults to relative time thresholds from moment.js.\ndefineProperty(RelativeFormat, 'thresholds', {\n    enumerable: true,\n\n    value: {\n        second: 45, 'second-short': 45,  // seconds to minute\n        minute: 45, 'minute-short': 45, // minutes to hour\n        hour  : 22, 'hour-short': 22, // hours to day\n        day   : 26, 'day-short': 26, // days to month\n        month : 11, 'month-short': 11 // months to year\n    }\n});\n\nRelativeFormat.prototype.resolvedOptions = function () {\n    return {\n        locale: this._locale,\n        style : this._options.style,\n        units : this._options.units\n    };\n};\n\nRelativeFormat.prototype._compileMessage = function (units) {\n    // `this._locales` is the original set of locales the user specified to the\n    // constructor, while `this._locale` is the resolved root locale.\n    var locales        = this._locales;\n    var resolvedLocale = this._locale;\n\n    var field        = this._fields[units];\n    var relativeTime = field.relativeTime;\n    var future       = '';\n    var past         = '';\n    var i;\n\n    for (i in relativeTime.future) {\n        if (relativeTime.future.hasOwnProperty(i)) {\n            future += ' ' + i + ' {' +\n                relativeTime.future[i].replace('{0}', '#') + '}';\n        }\n    }\n\n    for (i in relativeTime.past) {\n        if (relativeTime.past.hasOwnProperty(i)) {\n            past += ' ' + i + ' {' +\n                relativeTime.past[i].replace('{0}', '#') + '}';\n        }\n    }\n\n    var message = '{when, select, future {{0, plural, ' + future + '}}' +\n                                 'past {{0, plural, ' + past + '}}}';\n\n    // Create the synthetic IntlMessageFormat instance using the original\n    // locales value specified by the user when constructing the the parent\n    // IntlRelativeFormat instance.\n    return new IntlMessageFormat(message, locales);\n};\n\nRelativeFormat.prototype._getMessage = function (units) {\n    var messages = this._messages;\n\n    // Create a new synthetic message based on the locale data from CLDR.\n    if (!messages[units]) {\n        messages[units] = this._compileMessage(units);\n    }\n\n    return messages[units];\n};\n\nRelativeFormat.prototype._getRelativeUnits = function (diff, units) {\n    var field = this._fields[units];\n\n    if (field.relative) {\n        return field.relative[diff];\n    }\n};\n\nRelativeFormat.prototype._findFields = function (locale) {\n    var localeData = RelativeFormat.__localeData__;\n    var data       = localeData[locale.toLowerCase()];\n\n    // The locale data is de-duplicated, so we have to traverse the locale's\n    // hierarchy until we find `fields` to return.\n    while (data) {\n        if (data.fields) {\n            return data.fields;\n        }\n\n        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];\n    }\n\n    throw new Error(\n        'Locale data added to IntlRelativeFormat is missing `fields` for :' +\n        locale\n    );\n};\n\nRelativeFormat.prototype._format = function (date, options) {\n    var now = options && options.now !== undefined ? options.now : dateNow();\n\n    if (date === undefined) {\n        date = now;\n    }\n\n    // Determine if the `date` and optional `now` values are valid, and throw a\n    // similar error to what `Intl.DateTimeFormat#format()` would throw.\n    if (!isFinite(now)) {\n        throw new RangeError(\n            'The `now` option provided to IntlRelativeFormat#format() is not ' +\n            'in valid range.'\n        );\n    }\n\n    if (!isFinite(date)) {\n        throw new RangeError(\n            'The date value provided to IntlRelativeFormat#format() is not ' +\n            'in valid range.'\n        );\n    }\n\n    var diffReport  = diff(now, date);\n    var units       = this._options.units || this._selectUnits(diffReport);\n    var diffInUnits = diffReport[units];\n\n    if (this._options.style !== 'numeric') {\n        var relativeUnits = this._getRelativeUnits(diffInUnits, units);\n        if (relativeUnits) {\n            return relativeUnits;\n        }\n    }\n\n    return this._getMessage(units).format({\n        '0' : Math.abs(diffInUnits),\n        when: diffInUnits < 0 ? 'past' : 'future'\n    });\n};\n\nRelativeFormat.prototype._isValidUnits = function (units) {\n    if (!units || arrIndexOf.call(FIELDS, units) >= 0) {\n        return true;\n    }\n\n    if (typeof units === 'string') {\n        var suggestion = /s$/.test(units) && units.substr(0, units.length - 1);\n        if (suggestion && arrIndexOf.call(FIELDS, suggestion) >= 0) {\n            throw new Error(\n                '\"' + units + '\" is not a valid IntlRelativeFormat `units` ' +\n                'value, did you mean: ' + suggestion\n            );\n        }\n    }\n\n    throw new Error(\n        '\"' + units + '\" is not a valid IntlRelativeFormat `units` value, it ' +\n        'must be one of: \"' + FIELDS.join('\", \"') + '\"'\n    );\n};\n\nRelativeFormat.prototype._resolveLocale = function (locales) {\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n\n    // Create a copy of the array so we can push on the default locale.\n    locales = (locales || []).concat(RelativeFormat.defaultLocale);\n\n    var localeData = RelativeFormat.__localeData__;\n    var i, len, localeParts, data;\n\n    // Using the set of locales + the default locale, we look for the first one\n    // which that has been registered. When data does not exist for a locale, we\n    // traverse its ancestors to find something that's been registered within\n    // its hierarchy of locales. Since we lack the proper `parentLocale` data\n    // here, we must take a naive approach to traversal.\n    for (i = 0, len = locales.length; i < len; i += 1) {\n        localeParts = locales[i].toLowerCase().split('-');\n\n        while (localeParts.length) {\n            data = localeData[localeParts.join('-')];\n            if (data) {\n                // Return the normalized locale string; e.g., we return \"en-US\",\n                // instead of \"en-us\".\n                return data.locale;\n            }\n\n            localeParts.pop();\n        }\n    }\n\n    var defaultLocale = locales.pop();\n    throw new Error(\n        'No locale data has been added to IntlRelativeFormat for: ' +\n        locales.join(', ') + ', or the default locale: ' + defaultLocale\n    );\n};\n\nRelativeFormat.prototype._resolveStyle = function (style) {\n    // Default to \"best fit\" style.\n    if (!style) {\n        return STYLES[0];\n    }\n\n    if (arrIndexOf.call(STYLES, style) >= 0) {\n        return style;\n    }\n\n    throw new Error(\n        '\"' + style + '\" is not a valid IntlRelativeFormat `style` value, it ' +\n        'must be one of: \"' + STYLES.join('\", \"') + '\"'\n    );\n};\n\nRelativeFormat.prototype._selectUnits = function (diffReport) {\n    var i, l, units;\n    var fields = FIELDS.filter(function(field) {\n        return field.indexOf('-short') < 1;\n    });\n\n    for (i = 0, l = fields.length; i < l; i += 1) {\n        units = fields[i];\n\n        if (Math.abs(diffReport[units]) < RelativeFormat.thresholds[units]) {\n            break;\n        }\n    }\n\n    return units;\n};\n"]},"metadata":{},"sourceType":"script"}