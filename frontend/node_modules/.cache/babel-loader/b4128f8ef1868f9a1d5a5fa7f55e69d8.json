{"ast":null,"code":"var _jsxFileName = \"/home/fortnyce/Desktop/work_schedule_assigner/src/components/Container.js\",\n    _s = $RefreshSig$();\n\nimport { useInView } from 'react-intersection-observer';\nimport \"./Container.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Container(_ref) {\n  _s();\n\n  let {\n    children,\n    extClass\n  } = _ref;\n  const {\n    ref,\n    inView\n  } = useInView({\n    triggerOnce: true,\n    threshold: 0.3,\n    delay: 500\n  });\n  let animatedClass = extClass + ' animate__animated animate__zoomIn';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: inView && !extClass.includes(\"no-anim\") ? animatedClass : extClass,\n    style: inView ? {\n      visibility: 'visible'\n    } : {\n      visibility: 'hidden'\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Container, \"oyd/E8SD7Fx4uOp6P7gVV2pVlaE=\", false, function () {\n  return [useInView];\n});\n\n_c = Container;\nContainer.defaultProps = {\n  extClass: \"container\"\n};\nexport default Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/home/fortnyce/Desktop/work_schedule_assigner/src/components/Container.js"],"names":["useInView","Container","children","extClass","ref","inView","triggerOnce","threshold","delay","animatedClass","includes","visibility","defaultProps"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,6BAA1B;AACA,OAAO,iBAAP;;;AAEA,SAASC,SAAT,OAA2C;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAwB;AACvC,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAkBL,SAAS,CAAC;AAAEM,IAAAA,WAAW,EAAE,IAAf;AAAqBC,IAAAA,SAAS,EAAE,GAAhC;AAAqCC,IAAAA,KAAK,EAAE;AAA5C,GAAD,CAAjC;AACA,MAAIC,aAAa,GAAGN,QAAQ,GAAG,oCAA/B;AAEA,sBACI;AACI,IAAA,GAAG,EAAEC,GADT;AAEI,IAAA,SAAS,EAAGC,MAAM,IAAI,CAACF,QAAQ,CAACO,QAAT,CAAkB,SAAlB,CAAZ,GAA4CD,aAA5C,GAA4DN,QAF3E;AAGI,IAAA,KAAK,EAAEE,MAAM,GAAG;AAAEM,MAAAA,UAAU,EAAE;AAAd,KAAH,GAA+B;AAAEA,MAAAA,UAAU,EAAE;AAAd,KAHhD;AAAA,cAKKT;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAbQD,S;UACmBD,S;;;KADnBC,S;AAeTA,SAAS,CAACW,YAAV,GAAyB;AACrBT,EAAAA,QAAQ,EAAE;AADW,CAAzB;AAIA,eAAeF,SAAf","sourcesContent":["import { useInView } from 'react-intersection-observer';\nimport \"./Container.css\";\n\nfunction Container({ children, extClass }) {\n    const { ref, inView } = useInView({ triggerOnce: true, threshold: 0.3, delay: 500 });\n    let animatedClass = extClass + ' animate__animated animate__zoomIn';\n\n    return (\n        <div\n            ref={ref}\n            className={(inView && !extClass.includes(\"no-anim\")) ? animatedClass : extClass}\n            style={inView ? { visibility: 'visible' } : { visibility: 'hidden' }}\n        >\n            {children}\n        </div>\n    )\n}\n\nContainer.defaultProps = {    \n    extClass: \"container\"\n  }\n\nexport default Container;"]},"metadata":{},"sourceType":"module"}